name: release
on:
  push:
    branches:
      - main
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
  
permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      paths_released: ${{ steps.release.outputs.paths_released }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Debug release output
        run: "echo 'Paths released: ${{ steps.release.outputs.paths_released }}'"

  publish-packages:
    needs: release-please
    if: ${{ needs.release-please.outputs.paths_released != '[]' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        projectDirectory: ${{ fromJson(needs.release-please.outputs.paths_released) }}
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.projectDirectory }}
      cancel-in-progress: true  # Ensures one matrix job runs at a time for each project
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Debug release output
        run: "echo 'Paths released: ${{ needs.release-please.outputs.paths_released }}'"

      - name: Set up Project
        uses: ./.github/actions/setup-node-project
        with:
          projectDirectory: ${{ matrix.projectDirectory }}
          nodeVersion: lts/*
          registry-url: 'https://registry.npmjs.org'
          npmToken: ${{ secrets.NODE_AUTH_TOKEN }}

      - name: Build packages for ${{ matrix.projectDirectory }}
        run: |
           npm run build
        working-directory: ${{ matrix.projectDirectory }}

      - name: Print directory structure
        run: |
          echo "Current directory:"
          pwd
          echo "Directory structure after build:"
          ls -R
        working-directory: ${{ matrix.projectDirectory }}
      
      - name: Publish
        working-directory: ${{ matrix.projectDirectory }}
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}